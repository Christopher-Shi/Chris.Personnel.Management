// <auto-generated />
using System;
using Chris.Personnel.Management.EF.Storage;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Chris.Personnel.Management.EF.Storage.Migrations
{
    [DbContext(typeof(SqlServerContext))]
    partial class SqlServerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Chris.Personnel.Management.Entity.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnName("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnName("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Memo")
                        .HasColumnName("Memo")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = new Guid("32ec1e12-fe6d-4606-902e-6705beb0afc1"),
                            CreatedTime = new DateTime(2020, 7, 9, 23, 15, 14, 0, DateTimeKind.Unspecified),
                            CreatedUserId = new Guid("32ec1e37-fe6d-4606-902e-6705beb0afc0"),
                            IsDeleted = false,
                            Name = "管理员"
                        });
                });

            modelBuilder.Entity("Chris.Personnel.Management.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardId")
                        .IsRequired()
                        .HasColumnName("CardId")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Gender")
                        .HasColumnName("Gender")
                        .HasColumnType("int");

                    b.Property<int>("IsEnabled")
                        .HasColumnName("IsEnabled")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("Password")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnName("Phone")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrueName")
                        .IsRequired()
                        .HasColumnName("TrueName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("32ec1e37-fe6d-4606-902e-6705beb0afc0"),
                            CardId = "140226199401294051",
                            CreatedTime = new DateTime(2020, 7, 9, 23, 15, 14, 0, DateTimeKind.Unspecified),
                            Gender = 1,
                            IsEnabled = 1,
                            Name = "Admin",
                            Password = "A945FC6ADD2E0AB35C172BD987CC3FC630C4402677F0661A89CAE68F9DF622FC",
                            Phone = "13259769759",
                            RoleId = new Guid("32ec1e12-fe6d-4606-902e-6705beb0afc1"),
                            Salt = "9ad6ead0-3444-455c-a03c-35c1013643af",
                            TrueName = "Admin"
                        });
                });

            modelBuilder.Entity("Chris.Personnel.Management.Entity.User", b =>
                {
                    b.HasOne("Chris.Personnel.Management.Entity.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");
                });
#pragma warning restore 612, 618
        }
    }
}
